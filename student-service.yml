server:
  port: 8081

spring:
  application:
    name: student-service

  datasource:
    url: jdbc:mysql://localhost:3306/studentsdata
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  mail:
    host: smtp.gmail.com
    port: 587
    username: Vanikumari.gulla2@gmail.com
    password: sbdroggzjfompwkp
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: student-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  cloud:
    config:
      fail-fast: true
    loadbalancer:
      retry:
        enabled: true

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
    eviction-interval-timer-in-ms: 10000

resilience4j:
  circuitbreaker:
    instances:
      examService: 
        registerHealthIndicator: true
        slidingWindowSize: 3
        minimumNumberOfCalls: 3
        failureRateThreshold: 50
        waitDurationInOpenState: 5s

  retry:
    instances:
      examService:
        max-attempts: 2
        wait-duration: 1s

messages:
  studentMessagesProperties:
    createSuccess: "Student created successfully"
    fetchAllSuccess: "All students fetched successfully"
    fetchByIdSuccess: "Student fetched by ID"
    updateSuccess: "Student updated successfully"
    patchSuccess: "Student partially updated successfully"
    deleteSuccess: "Student deleted successfully"

  EmailMessagesProperties:
    simpleSuccess: "Simple email sent"
    attachmentSuccess: "Email with attachment sent"
    templateSuccess: "Template email sent"

  KafkaMessageProperties:
    pointToPointSuccess: "Message sent to topic '%s' (Point-to-Point)"
    publishSuccess: "Message published to topic '%s' (Publish-Subscribe)"



management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    circuitbreakers:
      enabled: true

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method

logging:
  level:
    root: INFO
    com.example: DEBUG












